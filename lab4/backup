#!/bin/bash

CURRENT_DATE=$(date +"%F")

CREATE_NEW_DIR=1
BACKUP_DIR=""

REPORT="/home/user/backup-report"
touch $REPORT

# iterate over all catalogs in /home/user in serach of backup directories
BACKUP_REGEXP=".*\/Backup-[1-9][0-9]*-[0-9]+-[0-9]+"
for DIR in /home/user/*; do
	if [[ -d "$DIR" ]] && [[ "$DIR" =~ $BACKUP_REGEXP ]]; then
		BACKUP_NAME=$(echo "$DIR" | grep -E -o "Backup.*")
		BACKUP_TIME=$(echo "$BACKUP_NAME" | grep -E -o "[0-9].*")

		# check if found backup file was created less than 7 days ago 
		CURRENT_TIME_SEC=$(date -d $CURRENT_DATE +"%s")
		BACKUP_TIME_SEC=$(date -d $BACKUP_TIME +"%s")
		let WEEK_DIFF=($CURRENT_TIME_SEC-$BACKUP_TIME_SEC)/60/60/24
		
		if [[ WEEK_DIFF -le 7 ]]; then
			CREATE_NEW_DIR=0
			BACKUP_DIR="$DIR"
			break
		fi
	fi
done

if [[ $CREATE_NEW_DIR -eq 1 ]]; then
	BACKUP_DIR="/home/user/Backup-$CURRENT_DATE"
	mkdir "$BACKUP_DIR"
fi	

# if new backup directory was created
if [[ $CREATE_NEW_DIR -eq 1 ]]; then
	echo "["$(date +"%T")"]: Create $BACKUP_DIR" >> $REPORT
	for FILE in /home/user/source/*; do
		FILENAME=$(echo "$FILE" | grep -E -o "[^\/]*$")
		COPY_LINK="$BACKUP_DIR/$FILENAME"
		
		cp "$FILE" "$COPY_LINK" &&
		{
			echo "Add $FILE to backup" >> $REPORT
		}
	done
	exit 0
fi

# update existing backup
echo "["$(date +"%T")"]: Update $BACKUP_DIR" >> $REPORT

for FILE in /home/user/source/*; do
	FILENAME=$(echo "$FILE" | grep -E -o "[^\/]*$")
	COPY_LINK="$BACKUP_DIR/$FILENAME"

	# if already exists file with this name
	if [[ -f "$COPY_LINK" ]]; then
		SIZE_SOURCE=$(stat -c %s "$FILE")
		SIZE_BACKUP=$(stat -c %s "$COPY_LINK")
		
		# copy new file if sizes are different
		if [[ $SIZE_SOURCE -ne $SIZE_BACKUP ]]; then
			mv -f "$COPY_LINK" "$COPY_LINK.$CURRENT_DATE"
			cp "$FILE" "$COPY_LINK" &&
			{
				echo "Update $COPY_LINK Previous version is $COPY_LINK.$CURRENT_DATE" >> $REPORT
			}
		fi
	else
		cp "$FILE" "$COPY_LINK" &&
		{
			echo "Add $FILE to backup" >> $REPORT
		}
	fi
done

